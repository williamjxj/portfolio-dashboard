openapi: 3.0.0
info:
  title: Website Dashboard API
  description: API for the website dashboard application
  version: 2.0.0
servers:
  - url: http://localhost:3000/api
    description: Development server
paths:
  /websites:
    get:
      summary: Get all websites
      responses:
        '200':
          description: List of websites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Website'
    post:
      summary: Create a new website
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Website'
      responses:
        '201':
          description: Website created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
  /websites/{id}:
    get:
      summary: Get website by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Website details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
        '404':
          description: Website not found
    put:
      summary: Update website
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Website'
      responses:
        '200':
          description: Website updated
        '404':
          description: Website not found
    delete:
      summary: Delete website
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Website deleted
        '404':
          description: Website not found
components:
  schemas:
    Website:
      type: object
      required:
        - id
        - name
        - url
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Website name
        url:
          type: string
          format: uri
          description: Website URL
        description:
          type: string
          description: Website description
        screenshot:
          type: string
          description: Screenshot URL
        logo:
          type: string
          description: Logo URL
        favicon:
          type: string
          description: Favicon URL
        requiresAuth:
          type: boolean
          description: Whether authentication is required
        lastUpdated:
          type: string
          format: date-time
        state:
          type: string
          enum: [draft, in-progress, completed, archived]
        techStack:
          $ref: '#/components/schemas/TechStack'
        deploymentInfo:
          $ref: '#/components/schemas/DeploymentInfo'
        features:
          type: array
          items:
            type: string
        demoVideo:
          type: string
          format: uri
    TechStack:
      type: object
      properties:
        frontend:
          type: array
          items:
            type: string
        backend:
          type: array
          items:
            type: string
        database:
          type: array
          items:
            type: string
        deployment:
          type: array
          items:
            type: string
        aiTools:
          type: array
          items:
            type: string
        other:
          type: array
          items:
            type: string
        source:
          type: string
          format: date-time
    DeploymentInfo:
      type: object
      properties:
        platform:
          type: string
        url:
          type: string
          format: uri
        status:
          type: string
          enum: [live, staging, development, offline]
        lastDeployed:
          type: string
          format: date-time
        githubRepo:
          type: string
          format: uri
        supabaseProject:
          type: string
        supabaseUrl:
          type: string
          format: uri
